# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J38Cy4-EvtisFR2LHkUr50egwC_bPku1
"""

#Day082 - ANN
#ipynb - interactive python notebook
print(2+8)
print("Hello World!")

"""# *This is a google colab demo class.*"""

from google.colab import drive
drive.mount('/gdrive')

with open('/gdrive/My Drive/foo.txt', 'w') as f:
  f.write('Hello Google Drive!')
!cat '/gdrive/My Drive/foo.txt'

import pandas as pd
df = pd.read_csv('Balanced_reviews.csv')

df.isnull().any(axis=0)
df.dropna(inplace=True)
df.shape

df = df[df['overall'] != 3]
df.shape
df['overall'].value_counts()

import numpy as np
df['positivity'] = np.where(df['overall'] > 3, 1, 0)
df.shape

df['positivity'].value_counts()

features = df['reviewText']
labels = df['positivity']

from sklearn.model_selection import train_test_split
features_train, features_test, labels_train, labels_test = train_test_split(features, labels, test_size = 0.5, random_state=42)

#Tf-idf : Term frequency - inverse document frequency
from sklearn.feature_extraction.text import TfidfVectorizer
vect = TfidfVectorizer(min_df=5, max_features=3000).fit(features_train)
#min_df means ignore the terms/words that appears less than the set value, by default it is 5. 

len(vect.vocabulary_) #to get total number of vaocabulary created

len(vect.get_feature_names())
vect.get_feature_names()[6990:7000]

features_train_vectorized = vect.transform(features_train)
features_train_vectorized = features_train_vectorized.todense()